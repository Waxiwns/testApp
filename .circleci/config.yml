# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/android:api-28-alpha

    working_directory: ~/testApp

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4


    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: |
          sudo apt update
          sudo apt install maven
          mvn -version

      - run: mvn dependency:go-offline

#      - run:
#          name: Install appiums server
#          command: |
#            curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
#            sudo apt-get install -y nodejs
#            sudo apt-get install -y build-essential
#            sudo apt-get install build-essential curl git m4 python-setuptools ruby texinfo libbz2-dev libcurl4-openssl-dev libexpat-dev libncurses-dev zlib1g-dev
#
#      - run:
#          name: Install appium server
#          command: |
#            sudo npm update -g
#            npm install appium
#            npm install wd

      - run:
          name: List what is currently installed
          command: sdkmanager --list

#      - run:
#          name: Setup emulator
#          command: echo yes | sdkmanager "system-images;android-28;google_apis_playstore;x86_64" # | sdkmanager --licenses #| echo "y" #| avdmanager create avd -n test -k "system-images;android-28;google_apis_playstore;x86_64"

      - run:
          name: Create emulator
          command: |
            emulator -list-avds
            echo "n" | avdmanager create avd -n test -k "system-images; android-28; google_apis; x86"
#          command: echo "no" |avdmanager create avd -n test -k "system-images;android-28;google_apis_playstore;x86_64"


#      - run:
#          name: Launch emulator
#          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
#          background: true

      - run:
          name: Launch Emulator
          command: |
            cd ${ANDROID_HOME}/emulator
            ls
            echo %ANDROID_HOME%
            export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
            emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
          background: true

      - run:
          name: Wait emulator
          command: |
            circle-android wait-for-boot
            adb shell input keyevent 82

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
#
#      - run:
#          name: Start appium server
#          command: appium &





      # run tests!
#      - run: echo "A first hello"
#      - run: mvn test
#      - run: mvn -Dtest=LoginTests test
      - run: mvn -Dtest=AuthorizedTests test
